import { reactive, ref } from 'vue';
import {
  Directory,
  File,
  SandpackFileExplorer,
  SandpackCodeEditor,
  SandpackLayout,
  SandpackProvider,
  SandpackPreview,
} from 'codesandbox-sandpack-vue3';

export default {
  title: 'components/File Explorer',
};

export const Component = () => (
  <>
    <SandpackProvider
      customSetup={{
        entry: '/index.tsx',
      }}
      files={{
        '/index.tsx': '',
        '/src/app.tsx': '',
        '/src/components/button.tsx': '',
        '/src/components/really-loooooooong-naaameeee.tsx': '',
      }}
    >
      <SandpackLayout>
        <SandpackFileExplorer />
        <SandpackCodeEditor />
      </SandpackLayout>
    </SandpackProvider>

    <SandpackProvider
      customSetup={{
        entry: '/index.tsx',
      }}
      files={{
        '/index.tsx': 'index',
        '/src/app.tsx': 'app',
        '/src/components/button.tsx': 'button',
      }}
      theme="dark"
    >
      <SandpackLayout>
        <SandpackFileExplorer />
        <SandpackCodeEditor />
      </SandpackLayout>
    </SandpackProvider>

    <SandpackProvider template="react">
      <SandpackLayout>
        <SandpackFileExplorer />
        <SandpackCodeEditor closableTabs />
        <SandpackPreview />
      </SandpackLayout>
  </SandpackProvider>
  </>
);

export const LongFileTree = () => (
  <SandpackProvider
    customSetup={{
      entry: '/src/com0.js',
    }}
    files={new Array(20).fill(' ').reduce((acc, _curr, index) => {
      acc[`/src/com${index}.js`] = '';

      return acc;
    }, {})}
  >
    <SandpackLayout>
      <SandpackFileExplorer />
    </SandpackLayout>
  </SandpackProvider>
);

export const FileStory = () => (
  <SandpackProvider>
    <SandpackLayout>
      <File depth={1} path="file.ts" />
    </SandpackLayout>
  </SandpackProvider>
);

export const AutoHiddenFiles = () => {
  const files = reactive({
    '/index.js': {
      code: '// index.js',
      active: true,
    },
    '/index2.js': {
      code: '// index2.js',
    },
    '/src/index.js': {
      code: '// this file is generated by vanilla template, but it is not needed',
      hidden: true,
    },
    '/hidden.js': {
      code: '// hidden.js',
      hidden: true,
    },
  });
  const visibleFiles = ref(['/src/index.js', '/hidden.js']);

  const changeVisibleFiles = () => {
    if (!visibleFiles.value.includes('/index2.js')) {
      visibleFiles.value.push('/index2.js');
    }
  };

  const changeFiles = () => {
    // @ts-ignore
    if (!files['/test.js']) {
      // @ts-ignore
      files['/test.js'] = { code: '// code' };
    } else {
      // @ts-ignore
      files['/index.js'].code = `// ${String(Math.random() * 1000000)}`;
    }
  };

  return () => (
    <>
      { visibleFiles.value.length !== 3 && <button onClick={changeVisibleFiles}>change visible files</button> }
      <SandpackProvider
        customSetup={{
          entry: '/index.js',
        }}
        files={{
          '/index.js': {
            code: '// index.js',
            active: true,
          },
          '/index2.js': {
            code: '// index2.js',
          },
          '/src/index.js': {
            code: '// this file is generated by vanilla template, but it is not needed',
            hidden: true,
          },
          '/hidden.js': {
            code: '// hidden.js',
            hidden: true,
          },
        }}
        options={{
          visibleFiles: visibleFiles.value,
          activeFile: '/src/index.js',
        }}
        template={'vanilla'}
      >
        <SandpackLayout>
          <SandpackFileExplorer autoHiddenFiles />
          <SandpackCodeEditor closableTabs />
        </SandpackLayout>
      </SandpackProvider>

      <br />
      <hr />
      <br />

      <button onClick={changeFiles}>change files</button>
      <SandpackProvider
        customSetup={{
          entry: '/index.js',
        }}
        files={files}
        template={'vanilla'}
      >
        <SandpackLayout>
          <SandpackFileExplorer autoHiddenFiles />
          <SandpackCodeEditor closableTabs />
        </SandpackLayout>
      </SandpackProvider>
    </>
  );
};

export const DirectoryIconStory = () => (
  <SandpackProvider>
    <SandpackLayout>
      <Directory
        activeFile="file.ts"
        depth={1}
        files={{ App: { code: 'app' } }}
        prefixedPath="/src"
        selectFile={(): any => null}
      />
    </SandpackLayout>
  </SandpackProvider>
);
